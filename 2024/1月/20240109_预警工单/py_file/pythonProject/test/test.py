from pyhive import hive
import pandas as pd

# 创建一个Hive连接
connection = hive.Connection(
    host='10.172.33.5',  # Hive服务器地址
    port=10017,  # 默认端口
    username='dc_dw',  # 用户名
    password='ACHA9876_kvhd',  # 密码（如果需要）
    database='dc_dwa',  # 选择数据库
    auth='LDAP'  # 认证类型，可能是NOSASL、LDAP、KERBEROS等
)

v_month_id = 202405
# 创建一个游标
cursor = connection.cursor()

# 定义要执行的SQL语句列表
sql_statements = [
    "set hive.mapred.mode = nonstrict",
    "set mapreduce.job.queuename = q_dc_dw",
    f"INSERT overwrite TABLE dc_dm.dm_service_standard_enterprise_index PARTITION (monthid='{v_month_id}',index_code ='FWBZ073')  select pro_name,        area_name,        index_level_1,        index_level_2_big,        index_level_2_small,        index_level_3,        index_level_4,        kpi_code,        index_name,        standard_rule,        traget_value_nation,        traget_value_pro,        index_unit,        index_type,        score_standard,        index_value_numerator,        index_value_denominator,        index_value,        case            when index_value = '--' and index_value_numerator = 0 and index_value_denominator = 0 then '--'            when index_type = '实时测评' then if(index_value >= 9, 100,                                                 round(index_value / target_value * 100, 4))            when index_type = '投诉率' then case                                                when index_value <= target_value then 100                                                when index_value / target_value >= 2 then 0                                                when index_value > target_value                                                    then round((2 - index_value / target_value) * 100, 4)                end            when index_type = '系统指标' then case                                                  when index_name in ('SVIP首次补卡收费数', '高星首次补卡收费')                                                      then if(index_value <= target_value, 100, 0)                                                  when standard_rule in ('≥', '=') then if(index_value >= target_value,                                                                                           100,                                                                                           round(index_value /                                                                                                 target_value *                                                                                                 100, 4))                                                  when standard_rule = '≤' then case                                                                                    when index_value <= target_value                                                                                        then 100                                                                                    when index_value / target_value >= 2                                                                                        then 0                                                                                    when index_value > target_value                                                                                        then round((2 - index_value / target_value) * 100, 4) end                end            end as score from (select pro_name,                                               --省份名称              '全省'                          as area_name,           --地市名称              '公众服务'                      as index_level_1,       -- 指标级别一              '网络'                          as index_level_2_big,   -- 指标级别二大类              '移动网络'                      as index_level_2_small, -- 指标级别二小类              '信号覆盖*'                     as index_level_3,       --指标级别三              '信号覆盖广'                    as index_level_4,       -- 指标级别四              'FWBZ073'                       as kpi_code,            --指标编码              '通话信号覆盖范围'              as index_name,          --五级-指标项名称              '≥'                             as standard_rule,       --达标规则              '9'                             as traget_value_nation, --目标值全国              '9'                             as traget_value_pro,    --目标值省份              if(pro_name = '全国', '9', '9') as target_value,              '分'                            as index_unit,          --指标单位              '实时测评'                      as index_type,          --指标类型              '90'                            as score_standard,      -- 得分达标值              index_value_numerator,                                  --分子              index_value_denominator,                                --分母;              index_value       from (select 'FWBZ073'         index_code,                    a.province_code   pro_id,                    a.province_name   pro_name,                    '00'              city_id,                    '全省'            city_name,                    round(a.score, 6) index_value,                    '2'               index_value_type,                    sum_score         index_value_numerator,                    mention           index_value_denominator             from (select handle_province_name                                  province_name,                          handle_province_code                                  province_code,                          count(id)                                             mention,                          sum(cast(regexp_replace(one_answer, ';', '') as int)) sum_score,                          avg(cast(regexp_replace(one_answer, ';', '') as int)) score                   from (select *,                                row_number() over (                                    partition by                                        id                                    order by                                        dts_kaf_offset desc                                    ) rn                         from dc_dwd.dwd_d_nps_satisfac_details_network                         where date_par rlike '{v_month_id}'                           and (                             two_answer rlike '1'                                 or three_answer rlike '1'                                 or four_answer rlike '1'                             )) a                   where rn = 1                   group by handle_province_name,                            handle_province_code) a             union all             select 'FWBZ073'         index_code,                    '00'              pro_id,                    '全国'            pro_name,                    '00'              city_id,                    '全省'            city_name,                    round(a.score, 6) index_value,                    '2'               index_value_type,                    sum_score         index_value_numerator,                    mention           index_value_denominator             from (select count(id)                                             mention,                          sum(cast(regexp_replace(one_answer, ';', '') as int)) sum_score,                          avg(cast(regexp_replace(one_answer, ';', '') as int)) score                   from (select *,                                row_number() over (                                    partition by                                        id                                    order by                                        dts_kaf_offset desc                                    ) rn                         from dc_dwd.dwd_d_nps_satisfac_details_network                         where date_par rlike '{v_month_id}'                           and (                             two_answer rlike '1'                                 or three_answer rlike '1'                                 or four_answer rlike '1'                             )) a                   where rn = 1) a) c) aa;",
    # 可以添加更多的SQL语句
]




# 依次执行每个SQL语句
for sql in sql_statements:
    cursor.execute(sql)

# 关闭游标和连接
cursor.close()
connection.close()
